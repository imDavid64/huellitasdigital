-- ==========================================
-- Orden de creacion de tablas para la base de datos HUELLITAS
-- 1 HUELLITAS_TABLAS.sql
-- 2 HUELLITAS_FUNCIONES.sql
-- 3 HUELLITAS_TRIGGERS.sql
-- 4 HUELLITAS_PROCEDIMIENTOS.sql
-- 5 HUELLITAS_VISTAS.sql
-- 6 HUELLITAS_PRUEBAS.sql
-- ==========================================

create database PROYECTO;

use PROYECTO;
-- ==========================================
-- NOMBRE: HUELLITAS_ESTADO_TB
-- DESCRIPCIÓN: Tabla para almacenar los diferentes estados del sistema
-- ==========================================
CREATE TABLE HUELLITAS_ESTADO_TB (
    ID_ESTADO_PK INT NOT NULL AUTO_INCREMENT,
    ESTADO_DESCRIPCION VARCHAR(100) NOT NULL,
    CONSTRAINT HUELLITAS_ESTADO_PK PRIMARY KEY (ID_ESTADO_PK)
);
/

-- ==========================================
-- NOMBRE: HUELLITAS_NUEVO_TB
-- DESCRIPCIÓN: Tabla para almacenar registros nuevos del sistema
-- ==========================================
CREATE TABLE HUELLITAS_NUEVO_TB (
    ID_NUEVO_PK INT NOT NULL AUTO_INCREMENT,
    NUEVO_DESCRIPCION VARCHAR(100),
    CONSTRAINT HUELLITAS_NUEVO_PK PRIMARY KEY (ID_NUEVO_PK)
);
/
-- ==========================================
-- NOMBRE: HUELLITAS_DIRECCION_PROVINCIA_TB
-- DESCRIPCIÓN: Tabla para almacenar las provincias con referencia a estados
-- ==========================================
CREATE TABLE HUELLITAS_DIRECCION_PROVINCIA_TB (
    ID_DIRECCION_PROVINCIA_PK INT NOT NULL AUTO_INCREMENT,
    ID_ESTADO_FK INT NOT NULL,
    NOMBRE_PROVINCIA VARCHAR(100) NOT NULL,
    CONSTRAINT HUELLITAS_DIRECCION_PROVINCIA_PK PRIMARY KEY (ID_DIRECCION_PROVINCIA_PK),
    CONSTRAINT HUELLITAS_DIRECCION_PROVINCIA_ESTADO_FK FOREIGN KEY (ID_ESTADO_FK) REFERENCES HUELLITAS_ESTADO_TB(ID_ESTADO_PK)
);
/
-- ==========================================
-- NOMBRE: HUELLITAS_DIRECCION_CANTON_TB
-- DESCRIPCIÓN: Tabla para almacenar los cantones con referencia a estados
-- ==========================================
CREATE TABLE HUELLITAS_DIRECCION_CANTON_TB (
    ID_DIRECCION_CANTON_PK INT NOT NULL AUTO_INCREMENT,
    ID_ESTADO_FK INT NOT NULL,
    NOMBRE_CANTON VARCHAR(100) NOT NULL,
    CONSTRAINT HUELLITAS_DIRECCION_CANTON_PK PRIMARY KEY (ID_DIRECCION_CANTON_PK),
    CONSTRAINT HUELLITAS_DIRECCION_CANTON_ESTADO_FK FOREIGN KEY (ID_ESTADO_FK) REFERENCES HUELLITAS_ESTADO_TB(ID_ESTADO_PK)
);
/

-- ==========================================
-- NOMBRE: HUELLITAS_DIRECCION_DISTRITO_TB
-- DESCRIPCIÓN: Tabla para almacenar los distritos con referencia a estados
-- ==========================================
CREATE TABLE HUELLITAS_DIRECCION_DISTRITO_TB (
    ID_DIRECCION_DISTRITO_PK INT NOT NULL AUTO_INCREMENT,
    ID_ESTADO_FK INT NOT NULL,
    NOMBRE_DISTRITO VARCHAR(100) NOT NULL,
    CONSTRAINT HUELLITAS_DIRECCION_DISTRITO_PK PRIMARY KEY (ID_DIRECCION_DISTRITO_PK),
    CONSTRAINT HUELLITAS_DIRECCION_DISTRITO_ESTADO_FK FOREIGN KEY (ID_ESTADO_FK) REFERENCES HUELLITAS_ESTADO_TB(ID_ESTADO_PK)
);
/

-- ==========================================
-- NOMBRE: HUELLITAS_DIRECCION_TB
-- DESCRIPCIÓN: Tabla principal de direcciones que relaciona provincia, cantón y distrito
-- ==========================================
CREATE TABLE HUELLITAS_DIRECCION_TB (
    ID_DIRECCION_PK INT NOT NULL AUTO_INCREMENT,
    ID_ESTADO_FK INT NOT NULL,
    ID_DIRECCION_PROVINCIA_FK INT NOT NULL,
    ID_DIRECCION_CANTON_FK INT NOT NULL,
    ID_DIRECCION_DISTRITO_FK INT NOT NULL,
    DIRECCION_SENNAS VARCHAR(200),
    CONSTRAINT HUELLITAS_DIRECCION_PK PRIMARY KEY (ID_DIRECCION_PK),
    CONSTRAINT HUELLITAS_DIRECCION_ESTADO_FK FOREIGN KEY (ID_ESTADO_FK) REFERENCES HUELLITAS_ESTADO_TB(ID_ESTADO_PK),
    CONSTRAINT HUELLITAS_DIRECCION_PROVINCIA_FK FOREIGN KEY (ID_DIRECCION_PROVINCIA_FK) REFERENCES HUELLITAS_DIRECCION_PROVINCIA_TB(ID_DIRECCION_PROVINCIA_PK),
    CONSTRAINT HUELLITAS_DIRECCION_CANTON_FK FOREIGN KEY (ID_DIRECCION_CANTON_FK) REFERENCES HUELLITAS_DIRECCION_CANTON_TB(ID_DIRECCION_CANTON_PK),
    CONSTRAINT HUELLITAS_DIRECCION_DISTRITO_FK FOREIGN KEY (ID_DIRECCION_DISTRITO_FK) REFERENCES HUELLITAS_DIRECCION_DISTRITO_TB(ID_DIRECCION_DISTRITO_PK)
);
/

-- ==========================================
-- NOMBRE: HUELLITAS_TELEFONO_CONTACTO_TB
-- DESCRIPCIÓN: Tabla para almacenar números de teléfono de contacto
-- ==========================================
CREATE TABLE HUELLITAS_TELEFONO_CONTACTO_TB (
    ID_TELEFONO_CONTACTO_PK INT NOT NULL AUTO_INCREMENT,
    ID_ESTADO_FK INT NOT NULL,
    TELEFONO_CONTACTO INT NOT NULL,
    CONSTRAINT HUELLITAS_TELEFONO_CONTACTO_PK PRIMARY KEY (ID_TELEFONO_CONTACTO_PK),
    CONSTRAINT HUELLITAS_TELEFONO_CONTACTO_FK FOREIGN KEY (ID_ESTADO_FK) REFERENCES HUELLITAS_ESTADO_TB(ID_ESTADO_PK)
);
/-- ==========================================
-- NOMBRE: HUELLITAS_ROL_USUARIO_TB
-- DESCRIPCIÓN: Tabla para almacenar los roles de usuario del sistema
-- ==========================================
CREATE TABLE HUELLITAS_ROL_USUARIO_TB (
    ID_ROL_USUARIO_PK INT NOT NULL AUTO_INCREMENT,
    ID_ESTADO_FK INT NOT NULL,
    DESCRIPCION_ROL_USUARIO VARCHAR(100) NOT NULL,
    CONSTRAINT HUELLITAS_ROL_USUARIO_PK PRIMARY KEY (ID_ROL_USUARIO_PK),
    CONSTRAINT HUELLITAS_ROL_USUARIO_ESTADO_FK FOREIGN KEY (ID_ESTADO_FK) REFERENCES HUELLITAS_ESTADO_TB(ID_ESTADO_PK)
);
/

-- ==========================================
-- NOMBRE: HUELLITAS_CLAVES_ENCRIPTACION_TB
-- DESCRIPCIÓN: Tabla para almacenar claves de encriptación del sistema
-- ==========================================
CREATE TABLE HUELLITAS_CLAVES_ENCRIPTACION_TB (
    ID_CLAVES_ENCRIPTACION_PK INT PRIMARY KEY AUTO_INCREMENT,
    NOMBRE_CLAVE VARCHAR(100) UNIQUE NOT NULL,
    CLAVE_ENCRIPTACION VARCHAR(500) NOT NULL,
    VERSION_CLAVE INT DEFAULT 1,
    FECHA_CREACION DATETIME DEFAULT CURRENT_TIMESTAMP,
    ESTA_ACTIVA BOOLEAN DEFAULT TRUE,
    INDEX IDX_NOMBRE_CLAVE (NOMBRE_CLAVE),
    INDEX IDX_ESTA_ACTIVA (ESTA_ACTIVA)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4;
/

-- ==========================================
-- NOMBRE: HUELLITAS_USUARIOS_TB
-- DESCRIPCIÓN: Tabla principal de usuarios del sistema con encriptación de contraseñas
-- ==========================================
CREATE TABLE HUELLITAS_USUARIOS_TB (
    ID_USUARIO_PK INT NOT NULL AUTO_INCREMENT,
    ID_ESTADO_FK INT NOT NULL,
    ID_ROL_USUARIO_FK INT NOT NULL,
    ID_DIRECCION_FK INT,
    ID_TELEFONO_CONTACTO_FK INT,
    USUARIO_NOMBRE VARCHAR(100),
    USUARIO_CORREO VARCHAR(100) UNIQUE NOT NULL,
    
    -- CAMPOS DE CONTRASEÑA
    USUARIO_CONTRASENNA VARCHAR(255),
    USUARIO_CONTRASENNA_ENCRIPTADA VARCHAR(500),
    USUARIO_SALT VARCHAR(100),
    
    -- CAMPOS ADICIONALES
    USUARIO_IDENTIFICACION INT UNIQUE,
    USUARIO_FECHA_REGISTRO DATE DEFAULT (CURDATE()),  -- CORREGIDO
    USUARIO_ULTIMO_LOGIN DATETIME,
    USUARIO_CUENTA_BANCARIA VARCHAR(50),
    USUARIO_IMAGEN_URL VARCHAR(500) NULL,
    -- CONSTRAINTS
    CONSTRAINT HUELLITAS_USUARIOS_PK PRIMARY KEY (ID_USUARIO_PK),
    CONSTRAINT HUELLITAS_USUARIOS_ESTADO_FK FOREIGN KEY (ID_ESTADO_FK) REFERENCES HUELLITAS_ESTADO_TB(ID_ESTADO_PK),
    CONSTRAINT HUELLITAS_USUARIOS_ROL_USUARIO_FK FOREIGN KEY (ID_ROL_USUARIO_FK) REFERENCES HUELLITAS_ROL_USUARIO_TB(ID_ROL_USUARIO_PK),
    CONSTRAINT HUELLITAS_USUARIOS_DIRECCION_FK FOREIGN KEY (ID_DIRECCION_FK) REFERENCES HUELLITAS_DIRECCION_TB(ID_DIRECCION_PK),
    CONSTRAINT HUELLITAS_USUARIOS_TELEFONO_CONTACTO_FK FOREIGN KEY (ID_TELEFONO_CONTACTO_FK) REFERENCES HUELLITAS_TELEFONO_CONTACTO_TB(ID_TELEFONO_CONTACTO_PK)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4;
/
-- ==========================================
-- NOMBRE: HUELLITAS_TARJETAS_TB
-- DESCRIPCIÓN: Tabla para almacenar información encriptada de tarjetas de crédito/débito
-- ==========================================
CREATE TABLE HUELLITAS_TARJETAS_TB (
    ID_TARJETA_PK INT PRIMARY KEY AUTO_INCREMENT,
    ID_USUARIO_FK INT NOT NULL,
    TIPO_TARJETA ENUM('CREDITO', 'DEBITO') NOT NULL,
    MARCA_TARJETA ENUM('VISA', 'MASTERCARD', 'AMEX', 'DINERS', 'OTHER') NOT NULL,
    NOMBRE_TITULAR VARCHAR(255) NOT NULL,
    NUMERO_TARJETA_ENCRIPTADO VARCHAR(500) NOT NULL,
    ULTIMOS_CUATRO_DIGITOS CHAR(4) NOT NULL,
    FECHA_VENCIMIENTO DATE NOT NULL,  -- EL FRONTEND VALIDA QUE SEA FUTURA
    CVV_ENCRIPTADO VARCHAR(500) NOT NULL,
    ES_PREDETERMINADO BOOLEAN DEFAULT FALSE,
    FECHA_REGISTRO DATETIME DEFAULT CURRENT_TIMESTAMP,
    FECHA_ACTUALIZACION DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    ESTA_ACTIVO BOOLEAN DEFAULT TRUE,
    TOKEN_PROVEEDOR VARCHAR(500) NULL,
    IP_REGISTRO VARCHAR(45) NULL,
    
    CONSTRAINT HUELLITAS_TARJETAS_USUARIO_FK 
    FOREIGN KEY (ID_USUARIO_FK) REFERENCES HUELLITAS_USUARIOS_TB(ID_USUARIO_PK) ON DELETE CASCADE,
    
    INDEX IDX_TARJETAS_USUARIO (ID_USUARIO_FK),
    INDEX IDX_TARJETAS_ACTIVAS (ESTA_ACTIVO),
    UNIQUE KEY UNIQUE_TARJETA_PREDETERMINADA (ID_USUARIO_FK, ES_PREDETERMINADO)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4;
/
-- ==========================================
-- NOMBRE: HUELLITAS_MASCOTA_ESPECIE_TB
-- DESCRIPCIÓN: Tabla para almacenar las especies de mascotas
-- ==========================================
CREATE TABLE HUELLITAS_MASCOTA_ESPECIE_TB (
    ID_MASCOTA_ESPECIE_PK INT NOT NULL AUTO_INCREMENT,
    ID_ESTADO_FK INT NOT NULL,
    NOMBRE_ESPECIE VARCHAR(100) NOT NULL,
    CONSTRAINT HUELLITAS_MASCOTA_ESPECIE_PK PRIMARY KEY (ID_MASCOTA_ESPECIE_PK),
    CONSTRAINT HUELLITAS_MASCOTA_ESPECIE_ESTADO_FK FOREIGN KEY (ID_ESTADO_FK) REFERENCES HUELLITAS_ESTADO_TB(ID_ESTADO_PK)
);
/

-- ==========================================
-- NOMBRE: HUELLITAS_MASCOTA_RAZA_TB
-- DESCRIPCIÓN: Tabla para almacenar las razas de mascotas
-- ==========================================
CREATE TABLE HUELLITAS_MASCOTA_RAZA_TB (
    ID_MASCOTA_RAZA_PK INT NOT NULL AUTO_INCREMENT,
    ID_ESTADO_FK INT NOT NULL,
    NOMBRE_RAZA VARCHAR(100) NOT NULL,
    CONSTRAINT HUELLITAS_MASCOTA_RAZA_PK PRIMARY KEY (ID_MASCOTA_RAZA_PK),
    CONSTRAINT HUELLITAS_MASCOTA_RAZA_ESTADO_FK FOREIGN KEY (ID_ESTADO_FK) REFERENCES HUELLITAS_ESTADO_TB(ID_ESTADO_PK)
);
/

-- ==========================================
-- NOMBRE: HUELLITAS_MASCOTA_TB
-- DESCRIPCIÓN: Tabla principal para almacenar información de mascotas
-- ==========================================
CREATE TABLE HUELLITAS_MASCOTA_TB (
    ID_MASCOTA_PK INT NOT NULL AUTO_INCREMENT,
    ID_ESTADO_FK INT NOT NULL,
    ID_MASCOTA_ESPECIE_FK INT NOT NULL,
    ID_MASCOTA_RAZA_FK INT,
    ID_USUARIO_FK INT,
    NOMBRE_MASCOTA VARCHAR(100),
    FECHA_NACIMIENTO DATE,
    GENERO VARCHAR(10) NOT NULL,
    MASCOTA_IMAGEN_URL VARCHAR(500),
    CONSTRAINT HUELLITAS_MASCOTA_PK PRIMARY KEY (ID_MASCOTA_PK),
    CONSTRAINT HUELLITAS_MASCOTA_ESTADO_FK FOREIGN KEY (ID_ESTADO_FK) REFERENCES HUELLITAS_ESTADO_TB(ID_ESTADO_PK),
    CONSTRAINT HUELLITAS_MASCOTA_ESPECIE_FK FOREIGN KEY (ID_MASCOTA_ESPECIE_FK) REFERENCES HUELLITAS_MASCOTA_ESPECIE_TB(ID_MASCOTA_ESPECIE_PK),
    CONSTRAINT HUELLITAS_MASCOTA_RAZA_FK FOREIGN KEY (ID_MASCOTA_RAZA_FK) REFERENCES HUELLITAS_MASCOTA_RAZA_TB(ID_MASCOTA_RAZA_PK),
    CONSTRAINT HUELLITAS_MASCOTA_USUARIO_FK FOREIGN KEY (ID_USUARIO_FK) REFERENCES HUELLITAS_USUARIOS_TB(ID_USUARIO_PK)
);
/

-- ==========================================
-- NOMBRE: HUELLITAS_TIPO_EXAMEN_TB
-- DESCRIPCIÓN: Tabla para almacenar los tipos de exámenes médicos
-- ==========================================
CREATE TABLE HUELLITAS_TIPO_EXAMEN_TB (
    ID_TIPO_EXAMEN_PK INT NOT NULL AUTO_INCREMENT,
    ID_ESTADO_FK INT NOT NULL,
    DESCRIPCION_EXAMEN VARCHAR(200) NOT NULL,
    CONSTRAINT HUELLITAS_TIPO_EXAMEN_PK PRIMARY KEY (ID_TIPO_EXAMEN_PK),
    CONSTRAINT HUELLITAS_TIPO_EXAMEN_ESTADO_FK FOREIGN KEY (ID_ESTADO_FK) REFERENCES HUELLITAS_ESTADO_TB(ID_ESTADO_PK)
);
/

-- ==========================================
-- NOMBRE: HUELLITAS_EXAMENES_TB
-- DESCRIPCIÓN: Tabla para almacenar los exámenes realizados a las mascotas
-- ==========================================
CREATE TABLE HUELLITAS_EXAMENES_TB (
    ID_EXAMEN_PK INT NOT NULL AUTO_INCREMENT,
    ID_MASCOTA_FK INT NOT NULL,
    ID_ESTADO_FK INT NOT NULL,
    ID_TIPO_EXAMEN_FK INT NOT NULL,
    EXAMEN_RESULTADO VARCHAR(100) NOT NULL,
    EXAMEN_FECHA_SEGUIMIENTO DATE,
    CONSTRAINT HUELLITAS_EXAMENES_PK PRIMARY KEY (ID_EXAMEN_PK),
    CONSTRAINT HUELLITAS_EXAMENES_MASCOTA_FK FOREIGN KEY (ID_MASCOTA_FK) REFERENCES HUELLITAS_MASCOTA_TB(ID_MASCOTA_PK),
    CONSTRAINT HUELLITAS_EXAMENES_ESTADO_FK FOREIGN KEY (ID_ESTADO_FK) REFERENCES HUELLITAS_ESTADO_TB(ID_ESTADO_PK),
    CONSTRAINT HUELLITAS_EXAMENES_TIPO_EXAMEN_FK FOREIGN KEY (ID_TIPO_EXAMEN_FK) REFERENCES HUELLITAS_TIPO_EXAMEN_TB(ID_TIPO_EXAMEN_PK)
);
/

-- ==========================================
-- NOMBRE: HUELLITAS_CONSULTA_MOTIVO_TB
-- DESCRIPCIÓN: Tabla para almacenar los motivos de consulta veterinaria
-- ==========================================
CREATE TABLE HUELLITAS_CONSULTA_MOTIVO_TB (
    ID_CONSULTA_MOTIVO_PK INT NOT NULL AUTO_INCREMENT,
    ID_ESTADO_FK INT NOT NULL,
    DESCRIPCION_MOTIVO VARCHAR(200) NOT NULL,
    CONSTRAINT HUELLITAS_CONSULTA_MOTIVO_PK PRIMARY KEY (ID_CONSULTA_MOTIVO_PK),
    CONSTRAINT HUELLITAS_CONSULTA_MOTIVO_ESTADO_FK FOREIGN KEY (ID_ESTADO_FK) REFERENCES HUELLITAS_ESTADO_TB(ID_ESTADO_PK)
);
/

-- ==========================================
-- NOMBRE: HUELLITAS_CONSULTAS_TB
-- DESCRIPCIÓN: Tabla para almacenar las consultas veterinarias
-- ==========================================
CREATE TABLE HUELLITAS_CONSULTAS_TB (
    ID_CONSULTA_PK INT NOT NULL AUTO_INCREMENT,
    CONSULTA_FECHA DATE NOT NULL,
    ID_CONSULTA_MOTIVO_FK INT NOT NULL,
    ID_ESTADO_FK INT NOT NULL,
    ID_MASCOTA_FK INT NOT NULL,
    ID_USUARIO_FK INT,
    CONSULTA_OBSERVACIONES VARCHAR(100),
    CONSTRAINT HUELLITAS_CONSULTAS_PK PRIMARY KEY (ID_CONSULTA_PK),
    CONSTRAINT HUELLITAS_CONSULTAS_MOTIVO_FK FOREIGN KEY (ID_CONSULTA_MOTIVO_FK) REFERENCES HUELLITAS_CONSULTA_MOTIVO_TB(ID_CONSULTA_MOTIVO_PK),
    CONSTRAINT HUELLITAS_CONSULTAS_ESTADO_FK FOREIGN KEY (ID_ESTADO_FK) REFERENCES HUELLITAS_ESTADO_TB(ID_ESTADO_PK),
    CONSTRAINT HUELLITAS_CONSULTAS_MASCOTA_FK FOREIGN KEY (ID_MASCOTA_FK) REFERENCES HUELLITAS_MASCOTA_TB(ID_MASCOTA_PK),
    CONSTRAINT HUELLITAS_CONSULTAS_USUARIO_FK FOREIGN KEY (ID_USUARIO_FK) REFERENCES HUELLITAS_USUARIOS_TB(ID_USUARIO_PK)
);
/

-- ==========================================
-- NOMBRE: HUELLITAS_FACTURACIONES_TB
-- DESCRIPCIÓN: Tabla para almacenar las facturaciones de consultas
-- ==========================================
CREATE TABLE HUELLITAS_FACTURACIONES_TB (
    ID_FACTURA_PK VARCHAR(50),
    ID_CONSULTA_FK INT NOT NULL,
    ID_ESTADO_FK INT NOT NULL,
    FACTURA_FECHA_EMISION DATE NOT NULL,
    FACTURA_MONTO_TOTAL INT NOT NULL,
    FACTURA_DESCUENTO INT,
    FACTURA_IMPUESTOS INT NOT NULL,
    FACTURA_MONTO_FINAL INT NOT NULL,
    FACTURA_SUBTOTAL INT NOT NULL,
    CONSTRAINT HUELLITAS_FACTURACIONES_PK PRIMARY KEY (ID_FACTURA_PK),
    CONSTRAINT HUELLITAS_FACTURACIONES_CONSULTA_FK FOREIGN KEY (ID_CONSULTA_FK) REFERENCES HUELLITAS_CONSULTAS_TB(ID_CONSULTA_PK),
    CONSTRAINT HUELLITAS_FACTURACIONES_ESTADO_FK FOREIGN KEY (ID_ESTADO_FK) REFERENCES HUELLITAS_ESTADO_TB(ID_ESTADO_PK)
);
/

-- ==========================================
-- NOMBRE: HUELLITAS_PROVEEDORES_TB
-- DESCRIPCIÓN: Tabla para almacenar información de proveedores
-- ==========================================
CREATE TABLE HUELLITAS_PROVEEDORES_TB (
    ID_PROVEEDOR_PK INT NOT NULL AUTO_INCREMENT,
    ID_ESTADO_FK INT NOT NULL,
    ID_DIRECCION_FK INT,
    ID_TELEFONO_CONTACTO_FK INT,
    PROVEEDOR_NOMBRE VARCHAR(100) NOT NULL,
    PROVEEDOR_CORREO VARCHAR(100),
    NOMBRE_REPRESENTANTE VARCHAR(100),
    PROVEEDOR_DESCRIPCION_PRODUCTOS VARCHAR(200),
    CONSTRAINT HUELLITAS_PROVEEDORES_PK PRIMARY KEY (ID_PROVEEDOR_PK),
    CONSTRAINT HUELLITAS_PROVEEDORES_ESTADO_FK FOREIGN KEY (ID_ESTADO_FK) REFERENCES HUELLITAS_ESTADO_TB(ID_ESTADO_PK),
    CONSTRAINT HUELLITAS_PROVEEDORES_DIRECCION_FK FOREIGN KEY (ID_DIRECCION_FK) REFERENCES HUELLITAS_DIRECCION_TB(ID_DIRECCION_PK),
    CONSTRAINT HUELLITAS_PROVEEDORES_TELEFONO_CONTACTO_FK FOREIGN KEY (ID_TELEFONO_CONTACTO_FK) REFERENCES HUELLITAS_TELEFONO_CONTACTO_TB(ID_TELEFONO_CONTACTO_PK)
);
/

-- ==========================================
-- NOMBRE: HUELLITAS_PRODUCTOS_CATEGORIA_TB
-- DESCRIPCIÓN: Tabla para almacenar categorías de productos
-- ==========================================
CREATE TABLE HUELLITAS_PRODUCTOS_CATEGORIA_TB(
	ID_ESTADO_FK INT NOT NULL,
    ID_CATEGORIA_PK INT NOT NULL AUTO_INCREMENT,
    DESCRIPCION_CATEGORIA VARCHAR(100) NOT NULL,
    CONSTRAINT HUELLITAS_PRODUCTOS_CATEGORIA_PK PRIMARY KEY (ID_CATEGORIA_PK),
    CONSTRAINT HUELLITAS_PRODUCTOS_CATEGORIA_ESTADO_FK FOREIGN KEY (ID_ESTADO_FK) REFERENCES HUELLITAS_ESTADO_TB(ID_ESTADO_PK)
);
/

-- ==========================================
-- NOMBRE: HUELLITAS_MARCAS_TB
-- DESCRIPCIÓN: Tabla para almacenar marcas de productos
-- ==========================================
CREATE TABLE HUELLITAS_MARCAS_TB(
ID_MARCA_PK INT NOT NULL auto_increment,
NOMBRE_MARCA VARCHAR(100) NOT NULL,
ID_ESTADO_FK INT NOT NULL,
MARCA_IMAGEN_URL VARCHAR(500) NULL,
CONSTRAINT HUELLITAS_MARCAS_PK PRIMARY KEY (ID_MARCA_PK),
CONSTRAINT HUELLITAS_MARCAS_ESTADO_FK FOREIGN KEY (ID_ESTADO_FK) REFERENCES HUELLITAS_ESTADO_TB(ID_ESTADO_PK)
);
/

-- ==========================================
-- NOMBRE: HUELLITAS_PRODUCTOS_TB
-- DESCRIPCIÓN: Tabla principal para almacenar información de productos
-- ==========================================
CREATE TABLE HUELLITAS_PRODUCTOS_TB (
    ID_PRODUCTO_PK INT NOT NULL AUTO_INCREMENT,
    ID_PROVEEDOR_FK INT NOT NULL,
    ID_ESTADO_FK INT NOT NULL,
    ID_CATEGORIA_FK INT NOT NULL,
    ID_MARCA_FK INT NOT NULL,
    ID_NUEVO_FK INT NOT NULL,
    PRODUCTO_NOMBRE VARCHAR(100) NOT NULL,
    PRODUCTO_DESCRIPCION VARCHAR(1000) NOT NULL,
    PRODUCTO_PRECIO_UNITARIO DECIMAL(10,2) NOT NULL,
    PRODUCTO_STOCK INT NOT NULL,
    IMAGEN_URL VARCHAR(255),
    FECHA_CREACION DATETIME DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT HUELLITAS_PRODUCTOS_PK PRIMARY KEY (ID_PRODUCTO_PK),
    CONSTRAINT HUELLITAS_PRODUCTOS_NUEVO_FK FOREIGN KEY (ID_NUEVO_FK) REFERENCES HUELLITAS_NUEVO_TB(ID_NUEVO_PK),
    CONSTRAINT HUELLITAS_PRODUCTOS_PROVEEDOR_FK FOREIGN KEY (ID_PROVEEDOR_FK) REFERENCES HUELLITAS_PROVEEDORES_TB(ID_PROVEEDOR_PK),
    CONSTRAINT HUELLITAS_PRODUCTOS_CATEGORIA_FK FOREIGN KEY (ID_CATEGORIA_FK) REFERENCES HUELLITAS_PRODUCTOS_CATEGORIA_TB(ID_CATEGORIA_PK),
    CONSTRAINT HUELLITAS_PRODUCTOS_MARCAS_FK FOREIGN KEY (ID_MARCA_FK) REFERENCES HUELLITAS_MARCAS_TB(ID_MARCA_PK),
    CONSTRAINT HUELLITAS_PRODUCTOS_ESTADO_FK FOREIGN KEY (ID_ESTADO_FK) REFERENCES HUELLITAS_ESTADO_TB(ID_ESTADO_PK)
);
/

-- ==========================================
-- NOMBRE: HUELLITAS_SLIDER_BANNER_TB
-- DESCRIPCIÓN: Tabla para almacenar imágenes del slider/banner (Agregado por David)
-- ==========================================
CREATE TABLE HUELLITAS_SLIDER_BANNER_TB (
    ID_SLIDER_BANNER_PK INT NOT NULL AUTO_INCREMENT,
    IMAGEN_URL VARCHAR(500) NOT NULL,
    DESCRIPCION_SLIDER_BANNER VARCHAR(255),
    ID_ESTADO_FK INT NOT NULL,
    CONSTRAINT HUELLITAS_SLIDER_BANNER_PK PRIMARY KEY (ID_SLIDER_BANNER_PK),
    CONSTRAINT HUELLITAS_SLIDER_BANNER_ESTADO_FK FOREIGN KEY (ID_ESTADO_FK) REFERENCES HUELLITAS_ESTADO_TB(ID_ESTADO_PK)
);
/

-- ==========================================
-- NOMBRE: HUELLITAS_DETALLE_FACTURA_TB
-- DESCRIPCIÓN: Tabla para almacenar el detalle de las facturas
-- ==========================================
CREATE TABLE HUELLITAS_DETALLE_FACTURA_TB (
    ID_FACTURA_FK VARCHAR(50),
    LINEA INT NOT NULL,
    ID_ESTADO_FK INT NOT NULL,
    ID_PRODUCTO_FK INT NOT NULL,
    MONTO_UNITARIO INT NOT NULL,
    CANTIDAD INT NOT NULL,
    TOTAL INT NOT NULL,
    CONSTRAINT HUELLITAS_DETALLE_FACTURA_PK PRIMARY KEY (ID_FACTURA_FK, LINEA),
    CONSTRAINT HUELLITAS_DETALLE_FACTURA_FACTURA_FK FOREIGN KEY (ID_FACTURA_FK) REFERENCES HUELLITAS_FACTURACIONES_TB(ID_FACTURA_PK),
    CONSTRAINT HUELLITAS_DETALLE_FACTURA_PRODUCTO_FK FOREIGN KEY (ID_PRODUCTO_FK) REFERENCES HUELLITAS_PRODUCTOS_TB(ID_PRODUCTO_PK),
    CONSTRAINT HUELLITAS_FACTURA_PRODUCTOS_ESTADO_FK FOREIGN KEY (ID_ESTADO_FK) REFERENCES HUELLITAS_ESTADO_TB(ID_ESTADO_PK)
);
/

-- ==========================================
-- NOMBRE: HUELLITAS_ORDEN_COMPRA_TB
-- DESCRIPCIÓN: Tabla para almacenar órdenes de compra a proveedores
-- ==========================================
CREATE TABLE HUELLITAS_ORDEN_COMPRA_TB (
    ID_ORDEN_COMPRA_PK INT NOT NULL AUTO_INCREMENT,
    ID_PROVEEDOR_FK INT NOT NULL,
    ID_ESTADO_FK INT NOT NULL,
    ORDEN_COMPRA_FECHA DATE NOT NULL,
    ORDEN_COMPRA_PRECIO_TOTAL INT NOT NULL,
    CONSTRAINT HUELLITAS_ORDEN_COMPRA_PK PRIMARY KEY (ID_ORDEN_COMPRA_PK),
    CONSTRAINT HUELLITAS_ORDEN_COMPRA_PROVEEDOR_FK FOREIGN KEY (ID_PROVEEDOR_FK) REFERENCES HUELLITAS_PROVEEDORES_TB(ID_PROVEEDOR_PK),
    CONSTRAINT HUELLITAS_ORDEN_COMPRA_ESTADO_FK FOREIGN KEY (ID_ESTADO_FK) REFERENCES HUELLITAS_ESTADO_TB(ID_ESTADO_PK)
);
/

-- ==========================================
-- NOMBRE: HUELLITAS_ORDEN_PRODUCTOS_TB
-- DESCRIPCIÓN: Tabla para almacenar los productos de las órdenes de compra
-- ==========================================
CREATE TABLE HUELLITAS_ORDEN_PRODUCTOS_TB (
    ID_ORDEN_COMPRA_FK INT NOT NULL,
    ID_PRODUCTO_FK INT NOT NULL,
    ID_ESTADO_FK INT NOT NULL,
    ORDEN_PRODUCTO_CANTIDAD INT NOT NULL,
    ORDEN_PRODUCTO_PRECIO_UNITARIO INT NOT NULL,
    ORDEN_PRODUCTO_SUBTOTAL INT NOT NULL,
    CONSTRAINT HUELLITAS_ORDEN_PRODUCTOS_PK PRIMARY KEY (ID_ORDEN_COMPRA_FK, ID_PRODUCTO_FK),
    CONSTRAINT HUELLITAS_ORDEN_PRODUCTOS_ORDEN_FK FOREIGN KEY (ID_ORDEN_COMPRA_FK) REFERENCES HUELLITAS_ORDEN_COMPRA_TB(ID_ORDEN_COMPRA_PK),
    CONSTRAINT HUELLITAS_ORDEN_PRODUCTOS_PRODUCTO_FK FOREIGN KEY (ID_PRODUCTO_FK) REFERENCES HUELLITAS_PRODUCTOS_TB(ID_PRODUCTO_PK),
    CONSTRAINT HUELLITAS_ORDEN_PRODUCTOS_ESTADO_FK FOREIGN KEY (ID_ESTADO_FK) REFERENCES HUELLITAS_ESTADO_TB(ID_ESTADO_PK)
);
/

-- ==========================================
-- NOMBRE: HUELLITAS_REGISTRO_CIRUGIAS_TB
-- DESCRIPCIÓN: Tabla para almacenar registros de cirugías de mascotas
-- ==========================================
CREATE TABLE HUELLITAS_REGISTRO_CIRUGIAS_TB (
    ID_CIRUGIA_PK INT NOT NULL,
    CIRUGIA_FECHA_INICIO DATE NOT NULL,
    CIRUGIA_FECHA_FINAL DATE NOT NULL,
    ID_ESTADO_FK INT NOT NULL,
    ID_MASCOTA_FK INT NOT NULL,
    CIRUGIA_ANOTACIONES VARCHAR(1000),
    CONSTRAINT HUELLITAS_REGISTRO_CIRUGIAS_PK PRIMARY KEY (ID_CIRUGIA_PK),
    CONSTRAINT HUELLITAS_REGISTRO_CIRUGIAS_ESTADO_FK FOREIGN KEY (ID_ESTADO_FK) REFERENCES HUELLITAS_ESTADO_TB(ID_ESTADO_PK),
    CONSTRAINT HUELLITAS_REGISTRO_CIRUGIAS_MASCOTA_FK FOREIGN KEY (ID_MASCOTA_FK) REFERENCES HUELLITAS_MASCOTA_TB(ID_MASCOTA_PK)
);
/

-- ==========================================
-- NOMBRE: HUELLITAS_CIRUGIAS_PERSONAL_TB
-- DESCRIPCIÓN: Tabla para relacionar cirugías con el personal médico
-- ==========================================
CREATE TABLE HUELLITAS_CIRUGIAS_PERSONAL_TB (
    ID_CIRUGIA_FK INT NOT NULL,
    ID_USUARIO_FK INT NOT NULL,
    ID_ESTADO_FK INT NOT NULL,
    ANOTACIONES_ADICIONALES VARCHAR(50),
    CONSTRAINT HUELLITAS_CIRUGIAS_PERSONAL_PK PRIMARY KEY (ID_CIRUGIA_FK, ID_USUARIO_FK),
    CONSTRAINT HUELLITAS_CIRUGIAS_PERSONAL_USUARIO_FK FOREIGN KEY (ID_USUARIO_FK) REFERENCES HUELLITAS_USUARIOS_TB(ID_USUARIO_PK),
    CONSTRAINT HUELLITAS_CIRUGIAS_PERSONAL_ESTADO_FK FOREIGN KEY (ID_ESTADO_FK) REFERENCES HUELLITAS_ESTADO_TB(ID_ESTADO_PK)
);
/

-- ==========================================
-- NOMBRE: HUELLITAS_HISTORIALES_MEDICOS_TB
-- DESCRIPCIÓN: Tabla para almacenar historiales médicos de las mascotas
-- ==========================================
CREATE TABLE HUELLITAS_HISTORIALES_MEDICOS_TB (
    ID_MASCOTA_FK int NOT NULL,
    ID_CONSULTA_FK int NOT NULL,
    ID_USUARIO_FK INT,
    ID_ESTADO_FK INT NOT NULL,
    HISTORIAL_FECHA_REGISTRO DATE NOT NULL,
    HISTORIAL_DIAGNOSTICO VARCHAR(1000),
    HISTORIAL_TRATAMIENTO VARCHAR(1000),
    HISTORIAL_NOTAS VARCHAR(1000),
    CONSTRAINT HUELLITAS_HISTORIALES_MEDICOS_PK PRIMARY KEY (ID_MASCOTA_FK, ID_CONSULTA_FK),
    CONSTRAINT HUELLITAS_HISTORIALES_MEDICOS_MASCOTA_FK FOREIGN KEY (ID_MASCOTA_FK) REFERENCES HUELLITAS_MASCOTA_TB(ID_MASCOTA_PK),
    CONSTRAINT HUELLITAS_HISTORIALES_MEDICOS_CONSULTA_FK FOREIGN KEY (ID_CONSULTA_FK) REFERENCES HUELLITAS_CONSULTAS_TB(ID_CONSULTA_PK),
    CONSTRAINT HUELLITAS_HISTORIALES_MEDICOS_USUARIO_FK FOREIGN KEY (ID_USUARIO_FK) REFERENCES HUELLITAS_USUARIOS_TB(ID_USUARIO_PK),
    CONSTRAINT HUELLITAS_HISTORIALES_MEDICOS_ESTADO_FK FOREIGN KEY (ID_ESTADO_FK) REFERENCES HUELLITAS_ESTADO_TB(ID_ESTADO_PK)
);
/

-- ==========================================
-- NOMBRE: HUELLITAS_BANNER_TB
-- DESCRIPCIÓN: Tabla para almacenar banners del sistema
-- ==========================================
CREATE TABLE HUELLITAS_BANNER_TB (
    ID_BANNER_PK int NOT NULL AUTO_INCREMENT,
    ID_ESTADO_FK INT NOT NULL,
    BANNER_TEXTO VARCHAR(10000),
    CONSTRAINT HUELLITAS_BANNER_PK PRIMARY KEY (ID_BANNER_PK),
    CONSTRAINT HUELLITAS_BANNER_FK FOREIGN KEY (ID_ESTADO_FK) REFERENCES HUELLITAS_ESTADO_TB(ID_ESTADO_PK)
);
/
-- ==========================================
-- NOMBRE: HUELLITAS_DESCUENTOS_TB
-- DESCRIPCIÓN: Tabla para almacenar descuentos temporales en productos
-- ==========================================
CREATE TABLE HUELLITAS_DESCUENTOS_TB (
    ID_DESCUENTO_PK INT NOT NULL AUTO_INCREMENT,
    ID_PRODUCTO_FK INT NOT NULL,
    ID_ESTADO_FK INT NOT NULL,
    
    -- INFORMACIÓN DEL DESCUENTO
    PORCENTAJE_DESCUENTO DECIMAL(5,2) NOT NULL,
    FECHA_FIN DATE NOT NULL,  -- SOLO FECHA FIN
    FECHA_CREACION DATETIME DEFAULT CURRENT_TIMESTAMP,
    -- CONSTRAINTS
    CONSTRAINT HUELLITAS_DESCUENTOS_PK PRIMARY KEY (ID_DESCUENTO_PK),
    CONSTRAINT HUELLITAS_DESCUENTOS_PRODUCTO_FK FOREIGN KEY (ID_PRODUCTO_FK) REFERENCES HUELLITAS_PRODUCTOS_TB(ID_PRODUCTO_PK),
    CONSTRAINT HUELLITAS_DESCUENTOS_ESTADO_FK FOREIGN KEY (ID_ESTADO_FK) REFERENCES HUELLITAS_ESTADO_TB(ID_ESTADO_PK),
    
    -- VALIDACIONES
    CONSTRAINT CHK_PORCENTAJE_DESCUENTO_RANGO CHECK (PORCENTAJE_DESCUENTO > 0 AND PORCENTAJE_DESCUENTO <= 100),
    CONSTRAINT CHK_FECHA_FIN_FUTURA CHECK (FECHA_FIN >= FECHA_CREACION),
    
    -- ÍNDICES
    INDEX IDX_DESCUENTO_PRODUCTO (ID_PRODUCTO_FK),
    INDEX IDX_DESCUENTO_ESTADO (ID_ESTADO_FK),
    INDEX IDX_DESCUENTO_FECHA_FIN (FECHA_FIN),
    INDEX IDX_DESCUENTO_ACTIVO (ID_ESTADO_FK, FECHA_FIN)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4;
